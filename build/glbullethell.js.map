{"version":3,"sources":["Bullet.js","BulletSprites.js","Effect.js","EffectSprites.js","GLLayer.js","Hex.js","ObjAsset.js","Shape.js","Terrain.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzjnpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvfile":"glbullethell.js","sourcesContent":["phina.namespace(function() {\r\n\r\n  phina.define(\"glb.Bullet\", {\r\n    superClass: \"phina.app.Element\",\r\n\r\n    id: -1,\r\n    instanceData: null,\r\n    runner: null,\r\n\r\n    x: 0,\r\n    y: 0,\r\n    age: 0,\r\n\r\n    init: function(id, instanceData, instanceStride) {\r\n      this.superInit();\r\n      this.id = id;\r\n      this.instanceData = instanceData;\r\n\r\n      this.index = id * instanceStride;\r\n    },\r\n\r\n    spawn: function(runner, option) {\r\n      var instanceData = this.instanceData;\r\n      var index = this.index;\r\n\r\n      this.runner = runner;\r\n      this.x = runner.x;\r\n      this.y = runner.y;\r\n      this.age = 0;\r\n      instanceData[index + 0] = this.x;\r\n      instanceData[index + 1] = this.y;\r\n      instanceData[index + 2] = runner.direction; // rotation\r\n      instanceData[index + 3] = 1.5; // scale\r\n      instanceData[index + 4] = option.type % 8; // frame.x\r\n      instanceData[index + 5] = ~~(option.type / 8); // frame.y\r\n      instanceData[index + 6] = 1; // visible\r\n      instanceData[index + 7] = 1; // brightness\r\n      instanceData[index + 8] = 0.2 + ~~(option.type / 8) % 2; // auraColor.r\r\n      instanceData[index + 9] = 0.2 + 0; // auraColor.g\r\n      instanceData[index + 10] = 0.2 + ~~(option.type / 8) % 2 + 1; // auraColor.b\r\n\r\n      var self = this;\r\n      runner.onVanish = function() {\r\n        self.remove();\r\n      };\r\n\r\n      return this;\r\n    },\r\n\r\n    update: function(app) {\r\n      var instanceData = this.instanceData;\r\n      var index = this.index;\r\n      var runner = this.runner;\r\n\r\n      runner.update();\r\n      this.x = runner.x;\r\n      this.y = runner.y;\r\n\r\n      if (this.x < -100 || 720 + 100 < this.x || this.y < -100 || 1280 + 100 < this.y) {\r\n        this.remove();\r\n        instanceData[index + 6] = 0;\r\n        return;\r\n      }\r\n\r\n      instanceData[index + 0] = this.x;\r\n      instanceData[index + 1] = this.y;\r\n      instanceData[index + 7] = 1.5 + Math.sin(this.age * 0.2) * 0.6;\r\n\r\n      this.age += 1;\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n  phina.define(\"glb.BulletSprites\", {\r\n    superClass: \"phigl.InstancedDrawable\",\r\n\r\n    instanceData: null,\r\n    pool: null,\r\n    _count: 1000,\r\n\r\n    init: function(gl, ext, w, h) {\r\n      this.superInit(gl, ext);\r\n      this\r\n        .setProgram(phigl.Program(gl).attach(\"bulletSprites.vs\").attach(\"bulletSprites.fs\").link())\r\n        .setDrawMode(gl.TRIANGLE_STRIP)\r\n        .setIndexValues([0, 1, 2, 3])\r\n        .setAttributes(\"position\", \"uv\")\r\n        .setAttributeDataArray([{\r\n          unitSize: 2,\r\n          data: [\r\n            //\r\n            -16, +16,\r\n            //\r\n            +16, +16,\r\n            //\r\n            -16, -16,\r\n            //\r\n            +16, -16,\r\n          ]\r\n        }, {\r\n          unitSize: 2,\r\n          data: [\r\n            //\r\n            0, 32 / 256,\r\n            //\r\n            32 / 256, 32 / 256,\r\n            //\r\n            0, 0,\r\n            //\r\n            32 / 256, 0,\r\n          ]\r\n        }, ])\r\n        .setInstanceAttributes(\r\n          \"instancePosition\",\r\n          \"instanceRotation\",\r\n          \"instanceScale\",\r\n          \"instanceFrame\",\r\n          \"instanceVisible\",\r\n          \"instanceBrightness\",\r\n          \"instanceAuraColor\"\r\n        )\r\n        .setUniforms(\r\n          \"vMatrix\",\r\n          \"pMatrix\",\r\n          \"texture\",\r\n          \"globalScale\"\r\n        );\r\n\r\n      var instanceUnit = this.instanceStride / 4;\r\n\r\n      this.uniforms.vMatrix.setValue(\r\n        mat4.lookAt(mat4.create(), [w / 2, h / 2, 1000], [w / 2, h / 2, 0], [0, 1, 0])\r\n      );\r\n      this.uniforms.pMatrix.setValue(\r\n        mat4.ortho(mat4.create(), -w / 2, w / 2, h / 2, -h / 2, 0.1, 3000)\r\n      );\r\n      this.uniforms.texture.setValue(0).setTexture(phigl.Texture(gl, \"bullets.png\"));\r\n      this.uniforms.globalScale.setValue(1.0);\r\n\r\n      var instanceData = this.instanceData = [];\r\n      for (var i = 0; i < this._count; i++) {\r\n        instanceData.push(\r\n          // position\r\n          0, 0,\r\n          // rotation\r\n          0,\r\n          // scale\r\n          1,\r\n          // frame\r\n          0, 0,\r\n          // visible\r\n          0,\r\n          // brightness\r\n          0,\r\n          // auraColor\r\n          0, 0, 0\r\n        );\r\n      }\r\n      this.setInstanceAttributeData(instanceData);\r\n\r\n      var self = this;\r\n      this.pool = Array.range(0, this._count).map(function(id) {\r\n        return glb.Bullet(id, instanceData, instanceUnit)\r\n          .on(\"removed\", function() {\r\n            self.pool.push(this);\r\n          });\r\n      });\r\n\r\n      // console.log(this);\r\n\r\n      // console.log(\"count = \" + this._count);\r\n      // console.log(\"this.instanceStride = \" + this.instanceStride);\r\n      // console.log(\"instanceUnit = \" + instanceUnit);\r\n      // console.log(\"this.instanceData.length = \" + this.instanceData.length);\r\n    },\r\n\r\n    get: function() {\r\n      var b = this.pool.shift();\r\n      return b;\r\n    },\r\n\r\n    update: function(app) {\r\n      this.setInstanceAttributeData(this.instanceData);\r\n    },\r\n\r\n    render: function() {\r\n      var gl = this.gl;\r\n      gl.enable(gl.BLEND);\r\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n      gl.disable(gl.DEPTH_TEST);\r\n\r\n      this.uniforms.globalScale.value = 1.0;\r\n      // console.log(\"bullet draw\");\r\n      this.draw(this._count);\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"glb.Effect\", {\r\n    superClass: \"phina.app.Element\",\r\n\r\n    id: -1,\r\n    instanceData: null,\r\n\r\n    x: 0,\r\n    y: 0,\r\n    rotation: 0,\r\n    scale: 0,\r\n\r\n    age: 0,\r\n\r\n    init: function(id, instanceData, instanceStride) {\r\n      this.superInit();\r\n      this.id = id;\r\n      this.instanceData = instanceData;\r\n      this.index = id * instanceStride;\r\n    },\r\n\r\n    spawn: function(options) {\r\n      var index = this.index;\r\n      var instanceData = this.instanceData;\r\n\r\n      this.x = options.x;\r\n      this.y = options.y;\r\n      this.rotation = options.rotation;\r\n      this.scale = options.scale;\r\n      this.alpha = options.alpha;\r\n\r\n      instanceData[index + 0] = 1; // visible\r\n      instanceData[index + 1] = this.x; // position.x\r\n      instanceData[index + 2] = this.y; // position.y\r\n      instanceData[index + 3] = this.rotation; // rotation\r\n      instanceData[index + 4] = this.scale; // scale\r\n      instanceData[index + 5] = 0; // frame.x\r\n      instanceData[index + 6] = 0; // frame.y\r\n      instanceData[index + 7] = this.alpha; // alpha\r\n\r\n      this.age = 0;\r\n\r\n      return this;\r\n    },\r\n\r\n    update: function(app) {\r\n      var index = this.index;\r\n      var instanceData = this.instanceData;\r\n\r\n      if (this.x < -100 || 640 + 100 < this.x || this.y < -100 || 960 + 100 < this.y) {\r\n        this.remove();\r\n      }\r\n\r\n      instanceData[index + 1] = this.x;\r\n      instanceData[index + 2] = this.y;\r\n      instanceData[index + 3] = this.rotation;\r\n      instanceData[index + 4] = this.scale;\r\n      instanceData[index + 7] = this.alpha;\r\n\r\n      this.age += 1;\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"glb.EffectSprites\", {\r\n    superClass: \"phigl.InstancedDrawable\",\r\n\r\n    instanceData: null,\r\n    pool: null,\r\n    _count: 200,\r\n\r\n    init: function(gl, ext, w, h) {\r\n      this.superInit(gl, ext);\r\n      this\r\n        .setProgram(phigl.Program(gl).attach(\"effectSprites.vs\").attach(\"effectSprites.fs\").link())\r\n        .setDrawMode(gl.TRIANGLE_STRIP)\r\n        .setIndexValues([0, 1, 2, 3])\r\n        .setAttributes(\"position\", \"uv\")\r\n        .setAttributeDataArray([{\r\n          unitSize: 2,\r\n          data: [\r\n            //\r\n            -16, +16,\r\n            //\r\n            +16, +16,\r\n            //\r\n            -16, -16,\r\n            //\r\n            +16, -16,\r\n          ]\r\n        }, {\r\n          unitSize: 2,\r\n          data: [\r\n            //\r\n            0, 32 / 256,\r\n            //\r\n            32 / 256, 32 / 256,\r\n            //\r\n            0, 0,\r\n            //\r\n            32 / 256, 0,\r\n          ]\r\n        }, ])\r\n        .setInstanceAttributes(\r\n          \"instanceVisible\",\r\n          \"instancePosition\",\r\n          \"instanceRotation\",\r\n          \"instanceScale\",\r\n          \"instanceFrame\",\r\n          \"instanceAlpha\"\r\n        )\r\n        .setUniforms(\r\n          \"vMatrix\",\r\n          \"pMatrix\",\r\n          \"texture\",\r\n          \"globalScale\"\r\n        );\r\n\r\n      var instanceStride = this.instanceStride / 4;\r\n\r\n      this.uniforms.vMatrix.setValue(\r\n        mat4.lookAt(mat4.create(), [w / 2, h / 2, 1000], [w / 2, h / 2, 0], [0, 1, 0])\r\n      );\r\n      this.uniforms.pMatrix.setValue(\r\n        mat4.ortho(mat4.create(), -w / 2, w / 2, h / 2, -h / 2, 0.1, 3000)\r\n      );\r\n      this.uniforms.texture.setValue(0).setTexture(phigl.Texture(gl, this._createTexture()));\r\n      this.uniforms.globalScale.setValue(1.0);\r\n\r\n      var instanceData = this.instanceData = [];\r\n      for (var i = 0; i < this._count; i++) {\r\n        instanceData.push(\r\n          // visible\r\n          0,\r\n          // position\r\n          0, 0,\r\n          // rotation\r\n          0,\r\n          // scale\r\n          1,\r\n          // frame\r\n          0, 0,\r\n          // alpha\r\n          0\r\n        );\r\n      }\r\n      this.setInstanceAttributeData(instanceData);\r\n\r\n      var self = this;\r\n      this.pool = Array.range(0, this._count).map(function(id) {\r\n        return glb.Effect(id, instanceData, instanceStride)\r\n          .on(\"removed\", function() {\r\n            instanceData[this.index + 0] = 0;\r\n            self.pool.push(this);\r\n          });\r\n      });\r\n\r\n      // console.log(this);\r\n    },\r\n\r\n    _createTexture: function() {\r\n      var texture = phina.graphics.Canvas().setSize(512, 512);\r\n      var context = texture.context;\r\n      var g = context.createRadialGradient(32, 32, 0, 32, 32, 32);\r\n      g.addColorStop(0.0, \"rgba(255, 255, 255, 0.3)\");\r\n      g.addColorStop(0.6, \"rgba(255, 125,   0, 0.3)\");\r\n      g.addColorStop(1.0, \"rgba(255,   0,   0, 0.0)\");\r\n      context.fillStyle = g;\r\n      context.fillRect(0, 0, 64, 64);\r\n      return texture;\r\n    },\r\n\r\n    get: function() {\r\n      return this.pool.shift();\r\n    },\r\n\r\n    update: function() {\r\n      this.setInstanceAttributeData(this.instanceData);\r\n    },\r\n\r\n    render: function() {\r\n      var gl = this.gl;\r\n      gl.enable(gl.BLEND);\r\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\r\n      gl.disable(gl.DEPTH_TEST);\r\n\r\n      this.uniforms.globalScale.value = 1.0;\r\n      // console.log(\"effect draw\");\r\n      this.draw(this._count);\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"glb.GLLayer\", {\r\n    superClass: \"phina.display.Layer\",\r\n\r\n    renderChildBySelf: true,\r\n\r\n    domElement: null,\r\n    gl: null,\r\n    terrain: null,\r\n    effectSprites: null,\r\n    bulletSprites: null,\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: 720,\r\n        height: 1280,\r\n      });\r\n      this.originX = 0;\r\n      this.originY = 0;\r\n\r\n      this.domElement = document.createElement(\"canvas\");\r\n      this.domElement.width = this.width;\r\n      this.domElement.height = this.height;\r\n\r\n      this.gl = this.domElement.getContext(\"webgl\");\r\n      var extInstancedArrays = phigl.Extensions.getInstancedArrays(this.gl);\r\n      var extVertexArrayObject = phigl.Extensions.getVertexArrayObject(this.gl);\r\n\r\n      var gl = this.gl;\r\n      gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n\r\n      this.terrain = glb.Terrain(gl, extInstancedArrays, this.width, this.height);\r\n      this.effectSprites = glb.EffectSprites(gl, extInstancedArrays, this.width, this.height);\r\n      this.bulletSprites = glb.BulletSprites(gl, extInstancedArrays, this.width, this.height);\r\n\r\n      var self = this;\r\n      var countX = glb.Terrain.countX;\r\n      var countZ = glb.Terrain.countZ;\r\n      var unit = glb.Terrain.unit;\r\n      Array.range(-countX, countX).forEach(function(x) {\r\n        Array.range(-countZ, countZ).forEach(function(z) {\r\n          var hex = self.getHex();\r\n          if (hex) {\r\n            hex\r\n              .spawn({\r\n                x: x * unit + z % 2,\r\n                y: Math.random() < 0.1 ? 4 : 0,\r\n                z: z * unit * 1 / Math.sqrt(3) * 1.5,\r\n                rotX: 0,\r\n                rotY: 0,\r\n                rotZ: 0,\r\n                scaleX: 1.1,\r\n                scaleY: 1.1,\r\n                scaleZ: 1.1,\r\n              })\r\n              .addChildTo(self);\r\n          }\r\n        });\r\n      });\r\n    },\r\n\r\n    getHex: function() {\r\n      return this.terrain.get();\r\n    },\r\n\r\n    getEffect: function() {\r\n      return this.effectSprites.get();\r\n    },\r\n\r\n    getBullet: function() {\r\n      return this.bulletSprites.get();\r\n    },\r\n\r\n    update: function(app) {\r\n      this.terrain.update(app);\r\n      this.effectSprites.update(app);\r\n      this.bulletSprites.update(app);\r\n\r\n      return;\r\n    },\r\n\r\n    draw: function(canvas) {\r\n      var gl = this.gl;\r\n\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n      this.terrain.render();\r\n      this.effectSprites.render();\r\n      this.bulletSprites.render();\r\n      gl.flush();\r\n\r\n      var image = this.domElement;\r\n      canvas.context.drawImage(image, 0, 0, image.width, image.height, -this.width * this.originX, -this.height * this.originY, this.width, this.height);\r\n\r\n      // this.draw = function(){};\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"glb.Hex\", {\r\n    superClass: \"phina.app.Element\",\r\n\r\n    id: -1,\r\n    instanceData: null,\r\n\r\n    x: 0,\r\n    y: 0,\r\n    z: 0,\r\n    rotX: 0,\r\n    rotY: 0,\r\n    rotZ: 0,\r\n    scaleX: 0,\r\n    scaleY: 0,\r\n    scaleZ: 0,\r\n\r\n    init: function(id, instanceData, instanceStride) {\r\n      this.superInit();\r\n      this.id = id;\r\n      this.instanceData = instanceData;\r\n      this.index = id * instanceStride;\r\n    },\r\n\r\n    spawn: function(options) {\r\n      var index = this.index;\r\n      var instanceData = this.instanceData;\r\n      this.age = 0;\r\n\r\n      this.x = options.x;\r\n      this.y = options.y;\r\n      this.z = options.z;\r\n      this.rotX = options.rotX;\r\n      this.rotY = options.rotY;\r\n      this.rotZ = options.rotZ;\r\n      this.scaleX = options.scaleX;\r\n      this.scaleY = options.scaleY;\r\n      this.scaleZ = options.scaleZ;\r\n\r\n      instanceData[index + 0] = 1;\r\n      instanceData[index + 1] = this.x;\r\n      instanceData[index + 2] = this.y;\r\n      instanceData[index + 3] = this.z;\r\n      instanceData[index + 4] = this.rotX;\r\n      instanceData[index + 5] = this.rotY;\r\n      instanceData[index + 6] = this.rotZ;\r\n      instanceData[index + 7] = this.scaleX;\r\n      instanceData[index + 8] = this.scaleY;\r\n      instanceData[index + 9] = this.scaleZ;\r\n\r\n      return this;\r\n    },\r\n\r\n    update: function(app) {\r\n      var index = this.index;\r\n      var instanceData = this.instanceData;\r\n\r\n      this.x += 0.20;\r\n      this.z += 0.50;\r\n\r\n      var countX = glb.Terrain.countX;\r\n      var countZ = glb.Terrain.countZ;\r\n      var unit = glb.Terrain.unit;\r\n      if (this.x < -countX * unit) this.x += countX * unit * 2;\r\n      else if (countX * unit < this.x) this.x -= countX * unit * 2;\r\n      if (this.z < -countZ * unit * 1 / Math.sqrt(3) * 1.5) this.z += countZ * unit * 1 / Math.sqrt(3) * 1.5 * 2;\r\n      else if (countZ * unit * 1 / Math.sqrt(3) * 1.5 < this.z) this.z -= countZ * unit * 1 / Math.sqrt(3) * 1.5 * 2;\r\n\r\n      instanceData[index + 1] = this.x;\r\n      instanceData[index + 2] = this.y;\r\n      instanceData[index + 3] = this.z;\r\n      instanceData[index + 4] = this.rotX;\r\n      instanceData[index + 5] = this.rotY;\r\n      instanceData[index + 6] = this.rotZ;\r\n      instanceData[index + 7] = this.scaleX;\r\n      instanceData[index + 8] = this.scaleY;\r\n      instanceData[index + 9] = this.scaleZ;\r\n\r\n      this.age += 1;\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"glb.ObjAsset\", {\r\n    superClass: \"phina.asset.File\",\r\n\r\n    init: function() {\r\n      this.superInit();\r\n    },\r\n\r\n    getIndices: function(objectName, groupName) {\r\n      objectName = objectName || \"defaultObject\";\r\n      groupName = groupName || \"defaultGroup\";\r\n\r\n      var obj = globj.ObjParser.parse(this.data)[objectName].groups[groupName];\r\n\r\n      var vertexSize = 0;\r\n      obj.faces.forEach(function(face) {\r\n        for (var i = 1; i < face.length - 1; i++) {\r\n          vertexSize += 3;\r\n        }\r\n      });\r\n\r\n      return Array.range(vertexSize);\r\n    },\r\n\r\n    getAttributeData: function(objectName, groupName) {\r\n      objectName = objectName || \"defaultObject\";\r\n      groupName = groupName || \"defaultGroup\";\r\n\r\n      var obj = globj.ObjParser.parse(this.data)[objectName].groups[groupName];\r\n\r\n      var trigons = [];\r\n      obj.faces.forEach(function(face) {\r\n        for (var i = 1; i < face.length - 1; i++) {\r\n          trigons.push(face[0]);\r\n          trigons.push(face[i + 0]);\r\n          trigons.push(face[i + 1]);\r\n        }\r\n      });\r\n\r\n      return trigons.map(function(vertex, i) {\r\n        var p = obj.positions[vertex.position - 1];\r\n        var t = obj.texCoords[vertex.texCoord - 1];\r\n        var n = obj.normals[vertex.normal - 1];\r\n        return [\r\n          // position\r\n          p.x, p.y, p.z,\r\n          // texCoord\r\n          t.u, t.v,\r\n          // normal\r\n          n.x, n.y, n.z\r\n        ];\r\n      }).flatten();\r\n    },\r\n  });\r\n\r\n  phina.asset.AssetLoader.assetLoadFunctions[\"obj\"] = function(key, path) {\r\n    var shader = glb.ObjAsset();\r\n    return shader.load({\r\n      path: path,\r\n    });\r\n  };\r\n\r\n});\r\n","phina.namespace(function() {\r\n  \r\n  phina.define(\"glb.Shape\", {\r\n    \r\n    positions: null,\r\n    normals: null,\r\n    uvs: null,\r\n    indices: null,\r\n\r\n    init: function() {\r\n      this.positions = [];\r\n      this.normals = [];\r\n      this.uvs = [];\r\n      this.indices = [];\r\n    },\r\n\r\n    getDate: function(names) {\r\n      names = Array.prototype.concat([], arguments);\r\n    },\r\n\r\n  });\r\n  \r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"glb.Terrain\", {\r\n    superClass: \"phigl.InstancedDrawable\",\r\n\r\n    instanceData: null,\r\n    pool: null,\r\n    _count: 0,\r\n\r\n    init: function(gl, ext, w, h) {\r\n      this.superInit(gl, ext);\r\n\r\n      var obj = phina.asset.AssetManager.get(\"obj\", \"hex.obj\");\r\n\r\n      this\r\n        .setProgram(phigl.Program(gl).attach(\"terrain.vs\").attach(\"terrain.fs\").link())\r\n        .setIndexValues(obj.getIndices())\r\n        .setAttributes(\"position\", \"uv\", \"normal\")\r\n        .setAttributeData(obj.getAttributeData())\r\n        .setInstanceAttributes(\r\n          \"instanceVisible\",\r\n          \"instancePosition\",\r\n          \"instanceRotation\",\r\n          \"instanceScale\"\r\n        )\r\n        .setUniforms(\r\n          \"vpMatrix\",\r\n          \"lightDirection\",\r\n          \"diffuseColor\",\r\n          \"ambientColor\",\r\n          \"eyeDirection\"\r\n        );\r\n\r\n      var instanceStride = this.instanceStride / 4;\r\n\r\n      this._count = (glb.Terrain.countX * 2) * (glb.Terrain.countZ * 2);\r\n\r\n      var instanceData = this.instanceData = [];\r\n      for (var i = 0; i < this._count; i++) {\r\n        instanceData.push(\r\n          // visible\r\n          0,\r\n          // position\r\n          0, 0, 0,\r\n          // rotation\r\n          0, 0, 0,\r\n          // scale\r\n          1, 1, 1\r\n        );\r\n      }\r\n      this.setInstanceAttributeData(instanceData);\r\n\r\n      this.lightDirection = vec3.set(vec3.create(), 1, -1, -1);\r\n      this.uniforms.lightDirection.value = vec3.normalize(vec3.create(), this.lightDirection);\r\n      this.uniforms.diffuseColor.value = [0.22, 0.22 * 2, 0.22, 1.0];\r\n      this.uniforms.ambientColor.value = [0.10, 0.10, 0.10, 1.0];\r\n\r\n      var vMatrix = mat4.lookAt(mat4.create(), [2, 30, 5], [0, 0, 0], [0, 1, 0]);\r\n      var pMatrix = mat4.perspective(mat4.create(), 45, w / h, 0.1, 10000);\r\n      this.uniforms.vpMatrix.value = mat4.mul(mat4.create(), pMatrix, vMatrix);\r\n      this.uniforms.eyeDirection.value = [0, -30, -5];\r\n\r\n      var self = this;\r\n      this.pool = Array.range(0, this._count).map(function(id) {\r\n        return glb.Hex(id, instanceData, instanceStride)\r\n          .on(\"removed\", function() {\r\n            instanceData[this.index + 0] = 0;\r\n            self.pool.push(this);\r\n          });\r\n      });\r\n\r\n      // console.log(this);\r\n    },\r\n\r\n    update: function(app) {\r\n      var f = app.ticker.frame * 0.01;\r\n      this.lightDirection = vec3.set(vec3.create(), Math.cos(f), -0.3, Math.sin(f));\r\n      this.uniforms.lightDirection.value = vec3.normalize(vec3.create(), this.lightDirection);\r\n      this.setInstanceAttributeData(this.instanceData);\r\n    },\r\n\r\n    get: function() {\r\n      return this.pool.shift();\r\n    },\r\n\r\n    render: function() {\r\n      var gl = this.gl;\r\n      gl.enable(gl.BLEND);\r\n      gl.enable(gl.DEPTH_TEST);\r\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n      this.draw(this._count);\r\n    },\r\n\r\n    _static: {\r\n      countX: 10,\r\n      countZ: 14,\r\n      unit: 2.0,\r\n    },\r\n  });\r\n\r\n});\r\n"],"sourceRoot":"/source/"}